@using Business.ViewModels.ContactMessage
@model List<ContactMessageListVM>

<div class="container mt-4">
    <h2 class="mb-4">Contact Messages</h2>

    <!-- Токен вставляем, чтобы JS смог его получить -->
    @Html.AntiForgeryToken()

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th>Date</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Message</th>
                    <th class="text-center">Status</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var message in Model)
                {
                    <tr>
                        <td>@message.CreatedAt.ToString("g")</td>
                        <td>@message.Name</td>
                        <td>@message.Email</td>
                        <td>@message.Content</td>
                        <td class="text-center">
                            <button class="btn btn-sm toggle-read @(message.IsRead ? "btn-success" : "btn-danger")"
                                    data-id="@message.Id">
                                @(message.IsRead ? "Read" : "Unread")
                            </button>
                        </td>
                        <td class="text-center">
                            <button class="btn btn-danger btn-sm delete-btn"
                                    data-id="@message.Id"
                                    title="Delete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (ViewBag.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

            document.querySelectorAll('.toggle-read').forEach(button => {
                button.addEventListener('click', async function () {
                    const messageId = this.dataset.id;
                    try {
                        const response = await fetch(`/Admin/ContactUs/ToggleReadStatus/${messageId}`, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': token
                            }
                        });

                        if (response.ok) {
                            const result = await response.json();
                            this.classList.toggle('btn-danger');
                            this.classList.toggle('btn-success');
                            this.textContent = result.newStatus ? 'Read' : 'Unread';
                        } else {
                            console.error('Server error:', response.status);
                        }
                    } catch (error) {
                        console.error('Network error:', error);
                    }
                });
            });

            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener('click', async function () {
                    const messageId = this.dataset.id;
                    if (confirm('Are you sure you want to delete this message?')) {
                        try {
                            const response = await fetch(`/Admin/ContactUs/Delete/${messageId}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'RequestVerificationToken': token
                                }
                            });

                            if (response.ok) {
                                this.closest('tr').remove();
                            } else {
                                alert('Failed to delete message');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Network error - please try again');
                        }
                    }
                });
            });
        });
    </script>
}
