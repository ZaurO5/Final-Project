@using Business.ViewModels.Basket
@model BasketIndexVM

<div class="basket-messages" style="display: none; padding: 10px; margin: 10px 0;"></div>

<div class="basket-container" style="max-height: calc(100vh - 200px); overflow-y: auto; margin: 20px 0;">
    <div class="basket-items">
        @foreach (var item in Model.BasketProducts)
        {
            <div class="basket-wrapper" style="display: flex; width: 100%; padding: 10px; box-sizing: border-box;">
                <div class="basket-item-image" style="flex: 0 0 auto; margin-right: 20px;">
                    <img src="@item.Product.ImagePath" alt="@item.Product.Title" style="max-width: 150px;">
                </div>
                <div class="basket-item-info" style="flex: 1; display: flex; flex-direction: column;">
                    <div class="basket-item-title">@item.Product.Title</div>
                    <div class="basket-item-price" data-price="@item.Product.Price">$@((item.Product.Price * item.Count).ToString("0.00"))</div>
                    <div class="basket-item-category">
                        Category: @item.Product.ProductCategories?.FirstOrDefault()?.Category?.Name
                    </div>
                    <div class="basket-item-color">
                        Selected Color: @item.Color?.Name
                    </div>
                    <div class="basket-item-size">
                        Selected Size: @item.Size?.Name
                    </div>
                    <div class="basket-quantity" style="display: flex; align-items: center; gap: 10px;">
                        Quantity:
                        <input type="number"
                               class="quantity-input"
                               value="@item.Count"
                               min="1"
                               max="@item.Product.StockCount"
                               data-basket-id="@item.BasketId"
                               data-product-id="@item.ProductId"
                               data-color-id="@item.ColorId"
                               data-size-id="@item.SizeId"
                               data-original-value="@item.Count"
                               style="width: 60px;">
                    </div>
                    <button class="basket-remove-btn"
                            data-basket-id="@item.BasketId"
                            data-product-id="@item.ProductId"
                            data-color-id="@item.ColorId"
                            data-size-id="@item.SizeId">
                        Remove
                    </button>
                </div>
            </div>
        }
    </div>

    <div class="basket-actions">
        @{
            var totalPrice = Model.BasketProducts.Sum(item => item.Product.Price * item.Count);
        }
        <div class="total-price">Total Price: <span>$@totalPrice.ToString("0.00")</span></div>
        <button class="update-all-btn"
                style="padding: 8px 20px;
        margin: 5px;
        background-image: linear-gradient(to bottom, #2e88e6, #1a6fb3);
        color: white;
        border: none;
        border-radius: 4px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.2s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        text-shadow: 0 1px 1px rgba(0,0,0,0.1);
        border: 1px solid #1a6fb3;">
            Update All
        </button>
        <button class="checkout-btn">Checkout</button>
        <a asp-controller="Wishlist" asp-action="Index">
            <button class="favorites-btn">Go to Favorites</button>
        </a>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>