@using Core.Entities
@model Product

<section class="details-page">
    <div class="container">
        <div class="product-messages" style="display: none; padding: 10px; margin: 10px 0;"></div>
        <div class="product-card">
            <div class="product-image">
                <img src="~/@Model.ImagePath" alt="@Model.Title" style="max-width: 400px;">
            </div>
            <div class="product-info">
                <h2 class="product-name">@Model.Title</h2>
                <h3 class="product-price">@Model.Price.ToString("0.##")$</h3>

                @if (Model.ProductCategories?.Any() == true)
                {
                    <h2 class="product-category">
                        Category: @string.Join(", ", Model.ProductCategories.Select(pc => pc.Category?.Name))
                    </h2>
                }

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="product-description">
                        <p>@Model.Description</p>
                    </div>
                }

                <form asp-controller="Basket" asp-action="AddProduct" method="post">
                    <div class="product-options" style="margin: 1rem 0;">
                        <label style="display: block; margin-bottom: 0.5rem;">Select Color:</label>
                        <div class="color-options" style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
                            @foreach (var color in Model.ProductColors?.Select(pc => pc.Color) ?? Enumerable.Empty<Color>())
                            {
                                <div style="width: 40px; height: 40px; background-color: @color.HexCode; border-radius: 50%; cursor: pointer;"
                                     onclick="document.getElementById('selectedColor').value = '@color.Id'; this.parentElement.querySelectorAll('div').forEach(el => el.style.border = 'none'); this.style.border = '2px solid #333';"
                                     title="@color.Name">
                                </div>
                            }
                        </div>
                        <input type="hidden" name="colorId" id="selectedColor" required>
                    </div>

                    <div class="product-options" style="margin: 1rem 0;">
                        <label style="display: block; margin-bottom: 0.5rem;">Select Size:</label>
                        <div class="size-options" style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
                            @foreach (var size in Model.ProductSizes?.Select(ps => ps.Size) ?? Enumerable.Empty<Size>())
                            {
                                <div style="padding: 8px 15px; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; color: #000000;"
                                     onclick="document.getElementById('selectedSize').value = '@size.Id'; this.parentElement.querySelectorAll('div').forEach(el => el.style.background = 'none'); this.style.background = '#f5f5f5';"
                                     title="@size.Name">
                                    @size.Name
                                </div>
                            }
                        </div>
                        <input type="hidden" name="sizeId" id="selectedSize" required>
                    </div>

                    <div class="quantity" style="margin: 1rem 0;">
                        <label for="quantity" style="display: block; margin-bottom: 0.5rem;">Quantity:</label>
                        <input type="number"
                               id="quantity"
                               name="quantity"
                               min="1"
                               max="@Model.StockCount"
                               value="1"
                               style="width: 80px; padding: 8px; border: 1px solid #ddd; border-radius: 4px;"
                               required>
                    </div>

                    <input type="hidden" name="productId" value="@Model.Id" />

                    <div class="actions" style="margin-top: 1rem;">
                        <button type="submit"
                                class="btn add-to-basket @(Model.StockCount == 0 ? "disabled" : "")"
                        @(Model.StockCount == 0 ? "disabled" : "")>
                            @(Model.StockCount == 0 ? "Out of Stock" : "Add to Shopping Bag")
                        </button>
                    </div>
                </form>

                <form asp-controller="Favorites" asp-action="AddToFavorites" method="post" class="favorites-form">
                    <input type="hidden" name="productId" value="@Model.Id" />
                    <div class="actions" style="margin-top: 1rem;">
                        <button type="submit"
                                class="btn add-to-favorites"
                                style="padding: 10px 20px;
                       background-color: pink;
                       border: 1px solid #ddd;
                       color: #333;
                       border-radius: 4px;
                       transition: all 0.3s ease;">
                            <i class="far fa-heart" style="margin-right: 8px;"></i>
                            Add to Favorites
                        </button>
                    </div>
                </form>

                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        $('.favorites-form').submit(function(e) {
                            e.preventDefault();

                            $.ajax({
                                url: $(this).attr('action'),
                                method: 'POST',
                                data: $(this).serialize(),
                                success: function(response) {
                                    showMessage(response.message, 'success');
                                },
                                error: function(xhr) {
                                    showMessage(xhr.responseJSON.message, 'error');
                                }
                            });
                        });

                        function showMessage(text, type) {
                            const messageDiv = $('<div>')
                                .text(text)
                                .css({
                                    'position': 'fixed',
                                    'top': '20px',
                                    'right': '20px',
                                    'padding': '15px 25px',
                                    'border-radius': '4px',
                                    'color': '#fff',
                                    'background': type === 'success' ? '#28a745' : '#dc3545',
                                    'box-shadow': '0 2px 10px rgba(0,0,0,0.1)',
                                    'z-index': '1000'
                                })
                                .fadeIn();

                            $('body').append(messageDiv);
                            setTimeout(() => messageDiv.fadeOut(), 3000);
                        }
                    });
                </script>
            </div>
        </div>
    </div>
</section>