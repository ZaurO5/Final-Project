@using Core.Entities
@model Product

<!-- Product Details -->
<section class="details-page">
    <div class="container">
        <div class="product-card">
            <div class="product-image">
                <img src="@Model.ImagePath" alt="@Model.Title">
            </div>
            <div class="product-info">
                <h2 class="product-name">@Model.Title</h2>
                <h3 class="product-price">@Model.Price.ToString("0.##")$</h3>

                @if (Model.ProductCategories?.Any() == true)
                {
                    <h2 class="product-category">
                        Category: @string.Join(", ", Model.ProductCategories.Select(pc => pc.Category?.Name))
                    </h2>
                }

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="product-description">
                        <p>@Model.Description</p>
                    </div>
                }

                <div class="product-options">
                    <label>Select Color:</label>
                    <div class="color-options">
                        @foreach (var color in Model.ProductColors?.Select(pc => pc.Color) ?? Enumerable.Empty<Color>())
                        {
                            <button class="color"
                                    data-color="@color.Name"
                                    style="background-color: @color.HexCode; width: 40px; height: 40px; border-radius: 50%; margin: 5px;"
                                    title="@color.Name">
                            </button>
                        }
                    </div>
                    <span class="text-danger color-error" style="display: none">Please select color</span>
                </div>

                <div class="product-options">
                    <label>Select Size:</label>
                    <div class="size-options">
                        @foreach (var size in Model.ProductSizes?.Select(ps => ps.Size) ?? Enumerable.Empty<Size>())
                        {
                            <button class="size"
                                    data-size="@size.Name"
                                    style="padding: 8px 15px; margin: 5px; border-radius: 4px;"
                                    title="@size.Name">
                                @size.Name
                            </button>
                        }
                    </div>
                    <span class="text-danger size-error" style="display: none">Please select size</span>
                </div>

                <div class="quantity">
                    <label for="quantity">Quantity:</label>
                    <input type="number"
                           id="quantity"
                           name="quantity"
                           min="1"
                           max="@Model.StockCount"
                           value="1"
                           class="quantity-input">
                    <span class="text-danger quantity-error" style="display: none;"></span>
                </div>

                <input type="hidden" name="selectedSize" id="selectedSize" value="" />
                <input type="hidden" name="selectedColor" id="selectedColor" value="" />

                <div class="actions">
                    <button class="btn add-to-basket"
                            data-id="@Model.Id"
                    @(Model.StockCount == 0 ? "disabled" : "")>
                        @(Model.StockCount == 0 ? "Out of Stock" : "Add to Shopping Bag")
                    </button>
                    <button class="btn add-to-favorites" data-id="@Model.Id">
                        Add to Favorites
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Инициализация данных для JS -->
<script>
    window.productData = {
        stockCount: @Model.StockCount,
        productId: @Model.Id
    };
</script>