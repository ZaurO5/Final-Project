@using Core.Entities
@model Product

<!-- Product Details -->
<section class="details-page">
    <div class="container">
        <div class="product-card">
            <div class="product-image">
                <img src="@Model.ImagePath" alt="@Model.Title">
            </div>
            <div class="product-info">
                <h2 class="product-name">@Model.Title</h2>
                <h3 class="product-price">@Model.Price.ToString("0.##")$</h3>
                <h2 class="product-category">Category: @string.Join(", ", Model.ProductCategories.Select(pc => pc.Category.Name))</h2>

                <h2 class="product-description">
                    @Model.Description
                </h2>

                <div class="product-options">
                    <label>Select Color:</label>
                    <div class="color-options">
                        @foreach (var color in Model.ProductColors.Select(pc => pc.Color))
                        {
                            <button class="color" data-color="@color.Name" style="background-color: @color.HexCode;"></button>
                        }
                    </div>
                </div>

                <div class="product-options">
                    <label>Select Size:</label>
                    <div class="size-options">
                        @foreach (var size in Model.ProductSizes.Select(ps => ps.Size))
                        {
                            <button class="size" data-size="@size.Name">@size.Name</button>
                        }
                    </div>
                </div>

                <div class="quantity">
                    <label for="quantity">Quantity:</label>
                    <input type="number" id="quantity" name="quantity" min="1" max="@Model.StockCount" value="1">
                    <span class="text-danger" id="quantity-error" style="display: none;">Quantity cannot exceed available stock.</span>
                    @if (ViewData.ModelState.ContainsKey("Quantity"))
                    {
                        <span class="text-danger">@ViewData.ModelState["Quantity"].Errors.First().ErrorMessage</span>
                    }
                </div>

                <input type="hidden" name="selectedSize" value="" />
                <input type="hidden" name="selectedColor" value="" />

                <div class="actions">
                    <button class="btn add-to-basket" data-id="@Model.Id" data-action="add-to-basket">
                        Add to Shopping Bag
                    </button>
                    <button class="btn add-to-favorites" data-id="@Model.Id" data-action="add-to-favorites">
                        Add to Favorites
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Product Details End -->